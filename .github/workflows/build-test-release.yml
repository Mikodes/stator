name: stator CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build-test-release:
    runs-on: ubuntu-latest

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - name: Increase watcher limit
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: master

      - name: Inject Nx Cloud token
        shell: bash
        env:
          nx_cloud_token: ${{ secrets.NX_CLOUD_TOKEN }}
        run:
          sed -i "s/nx_cloud_token/$nx_cloud_token/" $GITHUB_WORKSPACE/nx.json

      - name: Setup postgres container
        run: docker-compose -f $GITHUB_WORKSPACE/apps/database/postgres/docker-compose.yml up -d

      - name: Setup node.js 14.18.0
        uses: actions/setup-node@v2
        with:
          node-version: 14.18.0

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ./node_modules
            /home/runner/.cache/Cypress
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install npm packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm i

      - name: Start api
        run: npm run typeorm -- migration:run && npm start api &
        env:
          TEST: true

      - name: Enforce naming conventions
        run: npm run lint:file-folder-convention

      - name: Lint affected files
        run: npm run affected:lint

      - name: Build affected apps
        run: npm run affected:build

      - name: Test affected apps
        run: npm run affected:test -- --code-coverage

      - name: Test affected apps e2e
        run: npm run affected:e2e

      - name: Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/apps/api/
          fail_ci_if_error: false

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: ./coverage

      - name: Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: npx semantic-release
